name: cd

on:
  push:
    branches: [master]

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push-stable:
    runs-on: ubuntu-latest
    env:
      DOCKER_REPO: tecnativa/docker-duplicity
    steps:
      - uses: actions/checkout@v2
      # TODO Use YAML anchors when available
      # Get git metadata (see https://github.com/docker/build-push-action#handle-tags-and-labels)
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ env.DOCKER_REPO }} # list of Docker images to use as base name for tags
          tag-sha: true # add git short SHA as Docker tag
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.BOT_LOGIN }}
          password: ${{ secrets.BOT_TOKEN }}
      # Build and push stable images to DockerHub and to GHCR
      - name:
          Build and push
          docker://docker.pkg.github.com/tecnativa/docker-duplicity/stable:docker-s3
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x
          load: false
          push: true
          tags: |
            ghcr.io/${{ env.DOCKER_REPO }}:docker-s3
            ${{ env.DOCKER_REPO }}:docker-s3
          target: docker-s3
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name:
          Build and push
          docker://docker.pkg.github.com/tecnativa/docker-duplicity/stable:postgres-s3
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x
          load: false
          push: true
          tags: |
            ghcr.io/${{ env.DOCKER_REPO }}:postgres-s3
            ${{ env.DOCKER_REPO }}:postgres-s3
          target: postgres-s3
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name:
          Build and push
          docker://docker.pkg.github.com/tecnativa/docker-duplicity/stable:docker
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x
          load: false
          push: true
          tags: |
            ghcr.io/${{ env.DOCKER_REPO }}:docker
            ${{ env.DOCKER_REPO }}:docker
          target: docker
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name:
          Build and push
          docker://docker.pkg.github.com/tecnativa/docker-duplicity/stable:postgres
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x
          load: false
          push: true
          tags: |
            ghcr.io/${{ env.DOCKER_REPO }}:postgres
            ${{ env.DOCKER_REPO }}:postgres
          target: postgres
          labels: ${{ steps.docker_meta.outputs.labels }}
      - name:
          Build and push
          docker://docker.pkg.github.com/tecnativa/docker-duplicity/stable:latest
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm/v8,linux/arm64,linux/ppc64le,linux/s390x
          load: false
          push: true
          tags: |
            ghcr.io/${{ env.DOCKER_REPO }}:latest
            ${{ env.DOCKER_REPO }}:latest
          target: latest
          labels: ${{ steps.docker_meta.outputs.labels }}
